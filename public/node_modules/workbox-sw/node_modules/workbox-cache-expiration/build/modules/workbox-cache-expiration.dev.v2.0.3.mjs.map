{"version":3,"file":"workbox-cache-expiration.dev.v2.0.3.mjs","sources":["../../src/lib/constants.js","../../../../node_modules/idb/lib/idb.js","../../../../node_modules/stackframe/stackframe.js","../../../../node_modules/error-stack-parser/error-stack-parser.js","../../../../lib/assert.js","../../../../lib/log-group.js","../../../../lib/environment.js","../../../../lib/log-helper.js","../../../../lib/error-factory.js","../../src/lib/error-factory.js","../../src/lib/cache-expiration.js","../../src/lib/cache-expiration-plugin.js"],"sourcesContent":["/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\nlet tmpIdbName = `workbox-cache-expiration`;\nif (self && self.registration) {\n  tmpIdbName += `-${self.registration.scope}`;\n}\nexport const idbName = tmpIdbName;\nexport const idbVersion = 1;\nexport const urlPropertyName = 'url';\nexport const timestampPropertyName = 'timestamp';\n","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str[0].toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps);\n\n    function StackFrame(obj) {\n        if (obj instanceof Object) {\n            for (var i = 0; i < props.length; i++) {\n                if (obj.hasOwnProperty(props[i]) && obj[props[i]] !== undefined) {\n                    this['set' + _capitalize(props[i])](obj[props[i]]);\n                }\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[\\(\\)]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.join('@') || undefined;\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/* eslint-disable require-jsdoc */\n\nimport ErrorStackParser from 'error-stack-parser';\n\nexport function atLeastOne(object) {\n  const parameters = Object.keys(object);\n  if (!parameters.some((parameter) => object[parameter] !== undefined)) {\n    throwError('Please set at least one of the following parameters: ' +\n      parameters.map((p) => `'${p}'`).join(', '));\n  }\n}\n\nexport function hasMethod(object, expectedMethod) {\n  const parameter = Object.keys(object).pop();\n  const type = typeof object[parameter][expectedMethod];\n  if (type !== 'function') {\n    throwError(`The '${parameter}' parameter must be an object that exposes a\n      '${expectedMethod}' method.`);\n  }\n}\n\nexport function isInstance(object, expectedClass) {\n  const parameter = Object.keys(object).pop();\n  if (!(object[parameter] instanceof expectedClass)) {\n    throwError(`The '${parameter}' parameter must be an instance of\n      '${expectedClass.name}'`);\n  }\n}\n\nexport function isOneOf(object, values) {\n  const parameter = Object.keys(object).pop();\n  if (!values.includes(object[parameter])) {\n    throwError(`The '${parameter}' parameter must be set to one of the\n      following: ${values}`);\n  }\n}\n\nexport function isType(object, expectedType) {\n  const parameter = Object.keys(object).pop();\n  const actualType = typeof object[parameter];\n  if (actualType !== expectedType) {\n    throwError(`The '${parameter}' parameter has the wrong type. (Expected:\n      ${expectedType}, actual: ${actualType})`);\n  }\n}\n\nexport function isArrayOfType(object, expectedType) {\n  const parameter = Object.keys(object).pop();\n  const message = `The '${parameter}' parameter should be an array containing\n    one or more '${expectedType}' elements.`;\n\n  if (!Array.isArray(object[parameter])) {\n    throwError(message);\n  }\n\n  for (let item of object[parameter]) {\n    if (typeof item !== expectedType) {\n      throwError(message);\n    }\n  }\n}\n\nexport function isArrayOfClass(object, expectedClass) {\n  const parameter = Object.keys(object).pop();\n  const message = `The '${parameter}' parameter should be an array containing\n    one or more '${expectedClass.name}' instances.`;\n\n  if (!Array.isArray(object[parameter])) {\n    throwError(message);\n  }\n\n  for (let item of object[parameter]) {\n    if (!(item instanceof expectedClass)) {\n      throwError(message);\n    }\n  }\n}\n\nexport function isValue(object, expectedValue) {\n  const parameter = Object.keys(object).pop();\n  const actualValue = object[parameter];\n  if (actualValue !== expectedValue) {\n    throwError(`The '${parameter}' parameter has the wrong value. (Expected:\n      ${expectedValue}, actual: ${actualValue})`);\n  }\n}\n\nfunction throwError(message) {\n  // Collapse any newlines or whitespace into a single space.\n  message = message.replace(/\\s+/g, ' ');\n\n  const error = new Error(message);\n  error.name = 'assertion-failed';\n\n  const stackFrames = ErrorStackParser.parse(error);\n\n  // If, for some reason, we don't have all the stack information we need,\n  // we'll just end up throwing a basic Error.\n  if (stackFrames.length >= 3) {\n    // Assuming we have the stack frames, set the message to include info\n    // about what the underlying method was, and set the name to reflect\n    // the assertion type that failed.\n    error.message = `Invalid call to ${stackFrames[2].functionName}() — ` +\n      message;\n  }\n\n  throw error;\n}\n","/* eslint-disable no-console */\n\n/**\n * A simple helper to manage the print of a set of logs\n */\nclass LogGroup {\n  /**\n   * @param {object} input\n   */\n  constructor() {\n    this._logs = [];\n    this._childGroups = [];\n\n    this._isFallbackMode = false;\n    const ffRegex = /Firefox\\/(\\d*)\\.\\d*/.exec(navigator.userAgent);\n    if (ffRegex) {\n      try {\n        const ffVersion = parseInt(ffRegex[1], 10);\n        if (ffVersion < 55) {\n          this._isFallbackMode = true;\n        }\n      } catch (err) {\n        this._isFallbackMode = true;\n      }\n    }\n\n    if (/Edge\\/\\d*\\.\\d*/.exec(navigator.userAgent)) {\n      this._isFallbackMode = true;\n    }\n  }\n\n  /**\n   *@param {object} logDetails\n   */\n  addPrimaryLog(logDetails) {\n    this._primaryLog = logDetails;\n  }\n\n  /**\n   *@param {object} logDetails\n   */\n  addLog(logDetails) {\n    this._logs.push(logDetails);\n  }\n\n  /**\n   * @param {object} group\n   */\n  addChildGroup(group) {\n    if (group._logs.length === 0) {\n      return;\n    }\n\n    this._childGroups.push(group);\n  }\n\n  /**\n   * prints out this log group to the console.\n   */\n  print() {\n    if (this._logs.length === 0 && this._childGroups.length === 0) {\n      this._printLogDetails(this._primaryLog);\n      return;\n    }\n\n    if (this._primaryLog) {\n      if (!this._isFallbackMode) {\n        console.groupCollapsed(...this._getLogContent(this._primaryLog));\n      } else {\n        this._printLogDetails(this._primaryLog);\n      }\n    }\n\n    this._logs.forEach((logDetails) => {\n      this._printLogDetails(logDetails);\n    });\n\n    this._childGroups.forEach((group) => {\n      group.print();\n    });\n\n    if (this._primaryLog && !this._isFallbackMode) {\n      console.groupEnd();\n    }\n  }\n\n  /**\n   * Prints the specific logDetails object.\n   * @param {object} logDetails\n   */\n  _printLogDetails(logDetails) {\n    const logFunc = logDetails.logFunc ? logDetails.logFunc : console.log;\n    logFunc(...this._getLogContent(logDetails));\n  }\n\n  /**\n   * Returns a flattened array of message with colors and args.\n   * @param {object} logDetails\n   * @return {Array} Returns an array of arguments to pass to a console\n   * function.\n   */\n  _getLogContent(logDetails) {\n    let message = logDetails.message;\n    if (this._isFallbackMode && typeof message === 'string') {\n      // Replace the %c value with an empty string.\n      message = message.replace(/%c/g, '');\n    }\n\n    let allArguments = [message];\n\n    if (!this._isFallbackMode && logDetails.colors) {\n      allArguments = allArguments.concat(logDetails.colors);\n    }\n\n    if (logDetails.args) {\n      allArguments = allArguments.concat(logDetails.args);\n    }\n    return allArguments;\n  }\n}\n\nexport default LogGroup;\n","/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/**\n * @private\n * @return {boolean} True, if we're running in the service worker global scope.\n * False otherwise.\n */\nexport function isServiceWorkerGlobalScope() {\n  return ('ServiceWorkerGlobalScope' in self &&\n          self instanceof ServiceWorkerGlobalScope);\n}\n\n/**\n * @private\n * @return {boolean} True, if we're running a development bundle.\n * False otherwise.\n */\nexport function isDevBuild() {\n  // `BUILD_PROCESS_REPLACE::BUILD_TARGET` is replaced during the build process.\n  return `BUILD_PROCESS_REPLACE::BUILD_TARGET` === `dev`;\n}\n\n/**\n * @private\n * @return {boolean} True, if we're running on localhost or the equivalent IP\n * address. False otherwise.\n */\nexport function isLocalhost() {\n  return Boolean(\n    location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n  );\n}\n","/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n/* eslint-disable no-console */\n\nimport LogGroup from './log-group';\nimport {isDevBuild} from './environment';\n\nself.workbox = self.workbox || {};\nself.workbox.LOG_LEVEL = self.workbox.LOG_LEVEL || {\n  none: -1,\n  verbose: 0,\n  debug: 1,\n  warn: 2,\n  error: 3,\n};\n\nconst LIGHT_GREY = `#bdc3c7`;\nconst DARK_GREY = `#7f8c8d`;\nconst LIGHT_GREEN = `#2ecc71`;\nconst LIGHT_YELLOW = `#f1c40f`;\nconst LIGHT_RED = `#e74c3c`;\nconst LIGHT_BLUE = `#3498db`;\n\n/**\n * A class that will only log given the current log level\n * defined by the developer.\n *\n * Define custom log level by setting `self.workbox.logLevel`.\n *\n * @example\n *\n * self.workbox.logLevel = self.workbox.LOG_LEVEL.verbose;\n *\n * @private\n */\nclass LogHelper {\n  /**\n   * LogHelper constructor.\n   */\n  constructor() {\n    this._defaultLogLevel = isDevBuild() ?\n      self.workbox.LOG_LEVEL.debug :\n      self.workbox.LOG_LEVEL.warn;\n  }\n\n  /**\n   * The most verbose log level.\n   *\n   * @param {Object} options The options of the log.\n   */\n  log(options) {\n    this._printMessage(self.workbox.LOG_LEVEL.verbose, options);\n  }\n\n  /**\n   * Useful for logs that are more exceptional that log()\n   * but not severe.\n   *\n   * @param {Object} options The options of the log.\n   */\n  debug(options) {\n    this._printMessage(self.workbox.LOG_LEVEL.debug, options);\n  }\n\n  /**\n   * Warning messages.\n   *\n   * @param {Object} options The options of the log.\n   */\n  warn(options) {\n    this._printMessage(self.workbox.LOG_LEVEL.warn, options);\n  }\n\n  /**\n   * Error logs.\n   *\n   * @param {Object} options The options of the log.\n   */\n  error(options) {\n    this._printMessage(self.workbox.LOG_LEVEL.error, options);\n  }\n\n  /**\n   * Method to print to the console.\n   * @param {number} logLevel\n   * @param {Object} logOptions\n   */\n  _printMessage(logLevel, logOptions) {\n    if (!this._shouldLogMessage(logLevel, logOptions)) {\n      return;\n    }\n\n    const logGroups = this._getAllLogGroups(logLevel, logOptions);\n    logGroups.print();\n  }\n\n  /**\n   * Print a user friendly log to the console.\n   * @param  {numer} logLevel A number from self.workbox.LOG_LEVEL\n   * @param  {Object} logOptions Arguments to print to the console\n   * @return {LogGroup} Returns a log group to print to the console.\n   */\n  _getAllLogGroups(logLevel, logOptions) {\n    const topLogGroup = new LogGroup();\n\n    const primaryMessage = this._getPrimaryMessageDetails(logLevel, logOptions);\n    topLogGroup.addPrimaryLog(primaryMessage);\n\n    if (logOptions.error) {\n      const errorMessage = {\n        message: logOptions.error,\n        logFunc: console.error,\n      };\n      topLogGroup.addLog(errorMessage);\n    }\n\n    const extraInfoGroup = new LogGroup();\n    if (logOptions.that && logOptions.that.constructor &&\n      logOptions.that.constructor.name) {\n      const className = logOptions.that.constructor.name;\n      extraInfoGroup.addLog(\n        this._getKeyValueDetails('class', className)\n      );\n    }\n\n    if (logOptions.data) {\n      if (typeof logOptions.data === 'object' &&\n        !(logOptions.data instanceof Array)) {\n        Object.keys(logOptions.data).forEach((keyName) => {\n          extraInfoGroup.addLog(\n            this._getKeyValueDetails(keyName, logOptions.data[keyName])\n          );\n        });\n      } else {\n        extraInfoGroup.addLog(\n          this._getKeyValueDetails('additionalData', logOptions.data)\n        );\n      }\n    }\n\n    topLogGroup.addChildGroup(extraInfoGroup);\n\n    return topLogGroup;\n  }\n\n  /**\n   * This is a helper function to wrap key value pairss to a colored key\n   * value string.\n   * @param  {string} key\n   * @param  {string} value\n   * @return {Object} The object containing a message, color and Arguments\n   * for the console.\n   */\n  _getKeyValueDetails(key, value) {\n    return {\n      message: `%c${key}: `,\n      colors: [`color: ${LIGHT_BLUE}`],\n      args: value,\n    };\n  }\n\n  /**\n   * Helper method to color the primary message for the log\n   * @param  {number} logLevel   One of self.workbox.LOG_LEVEL\n   * @param  {Object} logOptions Arguments to print to the console\n   * @return {Object} Object containing the message and color info to print.\n   */\n  _getPrimaryMessageDetails(logLevel, logOptions) {\n    let logLevelName;\n    let logLevelColor;\n    switch (logLevel) {\n      case self.workbox.LOG_LEVEL.verbose:\n        logLevelName = 'Info';\n        logLevelColor = LIGHT_GREY;\n        break;\n      case self.workbox.LOG_LEVEL.debug:\n        logLevelName = 'Debug';\n        logLevelColor = LIGHT_GREEN;\n        break;\n      case self.workbox.LOG_LEVEL.warn:\n        logLevelName = 'Warn';\n        logLevelColor = LIGHT_YELLOW;\n        break;\n      case self.workbox.LOG_LEVEL.error:\n        logLevelName = 'Error';\n        logLevelColor = LIGHT_RED;\n        break;\n    }\n\n    let primaryLogMessage = `%c🔧 %c[${logLevelName}]`;\n    const primaryLogColors = [\n      `color: ${LIGHT_GREY}`,\n      `color: ${logLevelColor}`,\n    ];\n\n    let message;\n    if (typeof logOptions === 'string') {\n      message = logOptions;\n    } else if (logOptions.message) {\n      message = logOptions.message;\n    }\n\n    if (message) {\n      message = message.replace(/\\s+/g, ' ');\n      primaryLogMessage += `%c ${message}`;\n      primaryLogColors.push(`color: ${DARK_GREY}; font-weight: normal`);\n    }\n\n    return {\n      message: primaryLogMessage,\n      colors: primaryLogColors,\n    };\n  }\n\n  /**\n   * Test if the message should actually be logged.\n   * @param {number} logLevel The level of the current log to be printed.\n   * @param {Object|String} logOptions The options to log.\n   * @return {boolean} Returns true of the message should be printed.\n   */\n  _shouldLogMessage(logLevel, logOptions) {\n    if (!logOptions) {\n      return false;\n    }\n\n    let minValidLogLevel = this._defaultLogLevel;\n    if (self && self.workbox && typeof self.workbox.logLevel === 'number') {\n      minValidLogLevel = self.workbox.logLevel;\n    }\n\n    if (minValidLogLevel === self.workbox.LOG_LEVEL.none ||\n      logLevel < minValidLogLevel) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\nexport default new LogHelper();\n","/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\n'use strict';\n\n/**\n * A simple class to make errors and to help with testing.\n */\nclass ErrorFactory {\n  /**\n   * @param {Object} errors A object containing key value pairs where the key\n   * is the error name / ID and the value is the error message.\n   */\n  constructor(errors) {\n    this._errors = errors;\n  }\n  /**\n   * @param {string} name The error name to be generated.\n   * @param {Error} [thrownError] The thrown error that resulted in this\n   * message.\n   * @return {Error} The generated error.\n   */\n  createError(name, thrownError) {\n    if (!(name in this._errors)) {\n      throw new Error(`Unable to generate error '${name}'.`);\n    }\n\n    let message = this._errors[name].replace(/\\s+/g, ' ');\n    let stack = null;\n    if (thrownError) {\n      message += ` [${thrownError.message}]`;\n      stack = thrownError.stack;\n    }\n\n    const generatedError = new Error();\n    generatedError.name = name;\n    generatedError.message = message;\n    generatedError.stack = stack;\n    return generatedError;\n  }\n}\n\nexport default ErrorFactory;\n","/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\nimport ErrorFactory from '../../../../lib/error-factory';\n\nconst errors = {\n  'max-entries-or-age-required': `Either the maxEntries or maxAgeSeconds\n    parameters (or both) are required when constructing Plugin.`,\n  'max-entries-must-be-number': `The maxEntries parameter to the Plugin\n    constructor must either be a number or undefined.`,\n  'max-age-seconds-must-be-number': `The maxAgeSeconds parameter to the Plugin\n    constructor must either be a number or undefined.`,\n};\n\nexport default new ErrorFactory(errors);\n","/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\nimport idb from 'idb';\nimport {isType, isInstance, isArrayOfType} from '../../../../lib/assert';\nimport logHelper from '../../../../lib/log-helper';\nimport {\n  idbName,\n  idbVersion,\n  urlPropertyName,\n  timestampPropertyName,\n} from './constants';\nimport ErrorFactory from './error-factory';\n\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the responses cached.\n *\n * @example\n * const cacheExpiration = new workbox.cacheExpiration.CacheExpiration({\n *   maxEntries: 2,\n *   maxAgeSeconds: 10,\n * });\n *\n * @memberof module:workbox-cache-expiration\n */\nclass CacheExpiration {\n  /**\n   * Creates a new `CacheExpiration` instance, which is used to remove entries\n   * from a [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache)\n   * once certain criteria—max number of entries, age of entry, or both—is met.\n   *\n   * @param {Object} input\n   * @param {Number} [input.maxEntries] The maximum number of entries to cache.\n   * Entries will be expired using a least recently used (LRU) policy once\n   * the cache reaches this threshold.\n   * @param {Number} [input.maxAgeSeconds] The maximum age of an entry before\n   * it's treated as staled and removed.\n   */\n  constructor({maxEntries, maxAgeSeconds} = {}) {\n    if (!(maxEntries || maxAgeSeconds)) {\n      throw ErrorFactory.createError('max-entries-or-age-required');\n    }\n\n    if (maxEntries && typeof maxEntries !== 'number') {\n      throw ErrorFactory.createError('max-entries-must-be-number');\n    }\n\n    if (maxAgeSeconds && typeof maxAgeSeconds !== 'number') {\n      throw ErrorFactory.createError('max-age-seconds-must-be-number');\n    }\n\n    this.maxEntries = maxEntries;\n    this.maxAgeSeconds = maxAgeSeconds;\n\n    // These are used to keep track of open IndexDB and Caches for a given name.\n    this._dbs = new Map();\n    this._caches = new Map();\n\n    // This is used to ensure there's one asynchronous expiration operation\n    // running at a time.\n    this._expirationMutex = false;\n    // If another expiration request comes in, the timestamp is saved here and\n    // re-run after.\n    this._timestampForNextRun = null;\n  }\n\n  /**\n   * Returns a promise for the IndexedDB database used to keep track of state.\n   *\n   * @private\n   * @param {Object} input\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @return {DB} An open DB instance.\n   */\n  async getDB({cacheName} = {}) {\n    isType({cacheName}, 'string');\n\n    const idbId = `${idbName}-${cacheName}`;\n    if (!this._dbs.has(idbId)) {\n      const openDb = await idb.open(idbId, idbVersion, (upgradeDB) => {\n        const objectStore = upgradeDB.createObjectStore(cacheName,\n          {keyPath: urlPropertyName});\n        objectStore.createIndex(timestampPropertyName, timestampPropertyName,\n          {unique: false});\n      });\n      this._dbs.set(idbId, openDb);\n    }\n\n    return this._dbs.get(idbId);\n  }\n\n  /**\n   * Returns a promise for an open Cache instance named `cacheName`.\n   *\n   * @private\n   * @param {Object} input\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @return {Cache} An open Cache instance.\n   */\n  async getCache({cacheName} = {}) {\n    isType({cacheName}, 'string');\n\n    if (!this._caches.has(cacheName)) {\n      const openCache = await caches.open(cacheName);\n      this._caches.set(cacheName, openCache);\n    }\n\n    return this._caches.get(cacheName);\n  }\n\n  /**\n   * Checks whether a `Response` is \"fresh\", based on the `Response's`\n   * `Date` header and the `maxAgeSeconds` parameter passed into the\n   * constructor.\n   *\n   * The general approach is to default to fresh unless proven otherwise.\n   *\n   * If `maxAgeSeconds` or the `Date` header is not set then it will\n   * default to returning `true`, i.e. the response is still fresh and should\n   * be used.\n   *\n   * @param {Object} input\n   * @param {string} input.cacheName Name of the cache the responses belong to.\n   * @param {Response} input.cachedResponse The `Response` object that's been\n   *        read from a cache and whose freshness should be checked.\n   * @param {Number} [input.now] A timestamp.\n   *\n   * Defaults to the current time.\n   * @return {boolean} Either `true` if the response is fresh, or\n   * `false` if the `Response` is older than `maxAgeSeconds` and should no\n   * longer be used.\n   *\n   * @example\n   * expirationPlugin.isResponseFresh({\n   *   cachedResponse: responseFromCache\n   * });\n   */\n  isResponseFresh({cacheName, cachedResponse, now} = {}) {\n    // Only bother checking for freshness if we have a valid response and if\n    // maxAgeSeconds is set.\n    if (cachedResponse && this.maxAgeSeconds) {\n      isInstance({cachedResponse}, Response);\n\n      const dateHeader = cachedResponse.headers.get('date');\n      if (dateHeader) {\n        if (typeof now === 'undefined') {\n          now = Date.now();\n        }\n\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN. We want to treat that as a fresh response, since we\n        // assume fresh unless proven otherwise.\n        if (isNaN(headerTime)) {\n          return true;\n        }\n\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        return (headerTime + (this.maxAgeSeconds * 1000)) > now;\n      } else {\n        // TODO (jeffposnick): Change this method interface to be async, and\n        // check for the IDB for the specific URL in order to determine\n        // freshness when Date is not available.\n\n        // If there is no Date header (i.e. if this is a cross-origin response),\n        // then we don't know for sure whether the response is fresh or not.\n        // One thing we can do is trigger cache expiration, which will clean up\n        // any old responses based on IDB timestamps, and ensure that when a\n        // cache-first handler is used, stale responses will eventually be\n        // replaced (though not until the *next* request is made).\n        // See https://github.com/GoogleChrome/workbox/issues/691\n        this.expireEntries({cacheName, now});\n        // Return true, since otherwise a cross-origin cached response without\n        // a Date header would *never* be considered valid.\n        return true;\n      }\n    }\n\n    // If either cachedResponse or maxAgeSeconds wasn't set, then the response\n    // is \"trivially\" fresh, so return true.\n    return true;\n  }\n\n  /**\n   * Updates the timestamp stored in IndexedDB for `url` to be equal to `now`.\n   *\n   * When using this class directly (i.e. not via `CacheExpirationPlugin`),\n   * it's your responsibility to call `updateTimestap()` each time an entry is\n   * put into the cache. Otherwise, the `expireEntries()` method will not\n   * know which entries to remove.\n   *\n   * @example\n   * expirationPlugin.updateTimestamp({\n   *   cacheName: 'example-cache-name',\n   *   url: '/example-url'\n   * });\n   *\n   * @param {Object} input\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @param {string} input.url The URL for the entry to update. The hash portion\n   * of the URL will be ignored.\n   * @param {Number} [input.now] A timestamp. Defaults to the current time.\n   */\n  async updateTimestamp({cacheName, url, now} = {}) {\n    isType({url}, 'string');\n    isType({cacheName}, 'string');\n\n    // Remove the hash, if present.\n    const urlObject = new URL(url, location);\n    urlObject.hash = '';\n\n    if (typeof now === 'undefined') {\n      now = Date.now();\n    }\n\n    const db = await this.getDB({cacheName});\n    const tx = db.transaction(cacheName, 'readwrite');\n    tx.objectStore(cacheName).put({\n      [timestampPropertyName]: now,\n      [urlPropertyName]: urlObject.href,\n    });\n\n    await tx.complete;\n  }\n\n  /**\n   * Expires entries based on the the maximum age and the maximum number\n   * of entries defined in the constructor.\n   *\n   * To avoid concurrency issues, calls to this method when it's already running\n   * will result in the call begin re-run after the current execution has\n   * finished.\n   *\n   * @param {Object} input\n   * @param {string} input.cacheName Name of the cache to review and expire\n   * entries for.\n   * @param {Number} [input.now] A timestamp to treat as now. This is largely\n   * only useful for testing purposes.\n   *\n   * Defaults to the current time.\n   * @return {Promise} Resolves when the cache expiration has been performed. If\n   * the function is currently executing the Promise will resolve immediately.\n   *\n   * @example\n   * // Assume that entries have been added to 'example-cache-name', and that\n   * // updateTimestamp() was called after each entry was added.\n   * cacheExpiration.expireEntries({\n   *   cacheName: 'example-cache-name'\n   * });\n   */\n  async expireEntries({cacheName, now} = {}) {\n    // Since there's a single shared IDB instance that's queried to find entries\n    // to expire, this method doesn't need to run multiple times simultaneously.\n    // Use this._expirationMutex as a concurrency lock, and save the last value\n    // that it's been called with in this._timestampForNextRun as a signal\n    // to run it again once complete.\n    if (this._expirationMutex) {\n      this._timestampForNextRun = now;\n      return;\n    }\n    this._expirationMutex = true;\n\n    isType({cacheName}, 'string');\n\n    if (typeof now === 'undefined') {\n      now = Date.now();\n    }\n\n    // First, expire old entries, if maxAgeSeconds is set.\n    const oldEntries = this.maxAgeSeconds ?\n      await this.findOldEntries({cacheName, now}) :\n      [];\n\n    // Once that's done, check for the maximum size.\n    const extraEntries = this.maxEntries ?\n      await this.findExtraEntries({cacheName}) :\n      [];\n\n    // Use a Set to remove any duplicates following the concatenation, then\n    // convert back into an array.\n    const urls = [...new Set(oldEntries.concat(extraEntries))];\n    await this.deleteFromCacheAndIDB({cacheName, urls});\n\n    if (urls.length > 0) {\n      logHelper.debug({\n        that: this,\n        message: 'Expired entries have been removed from the cache.',\n        data: {cacheName, urls},\n      });\n    }\n\n    this._expirationMutex = false;\n    // If this method has been called while it was already running, then call\n    // it again now that the asynchronous operations are complete, using the\n    // most recent timestamp that was passed in.\n    if (this._timestampForNextRun) {\n      const savedTimestamp = this._timestampForNextRun;\n      this._timestampForNextRun = null;\n      return this.expireEntries({cacheName, now: savedTimestamp});\n    }\n  }\n\n  /**\n   * Expires entries based on the the maximum age.\n   *\n   * @private\n   * @param {Object} input\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @param {Number} [input.now] A timestamp.\n   * @return {Array<string>} A list of the URLs that were expired.\n   */\n  async findOldEntries({cacheName, now} = {}) {\n    isType({cacheName}, 'string');\n    isType({now}, 'number');\n\n    const expireOlderThan = now - (this.maxAgeSeconds * 1000);\n    const urls = [];\n    const db = await this.getDB({cacheName});\n    const tx = db.transaction(cacheName, 'readonly');\n    const store = tx.objectStore(cacheName);\n    const timestampIndex = store.index(timestampPropertyName);\n\n    timestampIndex.iterateCursor((cursor) => {\n      if (!cursor) {\n        return;\n      }\n\n      if (cursor.value[timestampPropertyName] < expireOlderThan) {\n        urls.push(cursor.value[urlPropertyName]);\n      }\n\n      cursor.continue();\n    });\n\n    await tx.complete;\n    return urls;\n  }\n\n  /**\n   * Finds the URLs that should be expired as per the current state of IndexedDB\n   * and the `maxEntries` configuration. A least-recently used policy is\n   * enforced, so if `maxEntries` is `N`, and there are `N + M` URLs listed in\n   * IndexedDB, then this function will return the least-recently used `M` URLs.\n   *\n   * @private\n   * @param {Object} input\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @return {Array<string>} A list of the URLs that are candidates for\n   *   expiration.\n   */\n  async findExtraEntries({cacheName} = {}) {\n    isType({cacheName}, 'string');\n\n    const urls = [];\n    const db = await this.getDB({cacheName});\n    let tx = db.transaction(cacheName, 'readonly');\n    let store = tx.objectStore(cacheName);\n    let timestampIndex = store.index(timestampPropertyName);\n    const initialCount = await timestampIndex.count();\n\n    if (initialCount > this.maxEntries) {\n      // We need to create a new transaction to make Firefox happy.\n      tx = db.transaction(cacheName, 'readonly');\n      store = tx.objectStore(cacheName);\n      timestampIndex = store.index(timestampPropertyName);\n\n      timestampIndex.iterateCursor((cursor) => {\n        if (!cursor) {\n          return;\n        }\n\n        urls.push(cursor.value[urlPropertyName]);\n\n        if (initialCount - urls.length > this.maxEntries) {\n          cursor.continue();\n        }\n      });\n    }\n\n    await tx.complete;\n    return urls;\n  }\n\n  /**\n   * Removes entries corresponding to each of the URLs from both the Cache\n   * Storage API and from IndexedDB.\n   *\n   * @private\n   * @param {Object} input\n   * @param {string} input.cacheName Name of the cache the Responses belong to.\n   * @param {Array<string>} urls The URLs to delete.\n   */\n  async deleteFromCacheAndIDB({cacheName, urls} = {}) {\n    isType({cacheName}, 'string');\n    isArrayOfType({urls}, 'string');\n\n    if (urls.length > 0) {\n      const cache = await this.getCache({cacheName});\n      const db = await this.getDB({cacheName});\n\n      for (let url of urls) {\n        await cache.delete(url);\n        const tx = db.transaction(cacheName, 'readwrite');\n        const store = tx.objectStore(cacheName);\n        store.delete(url);\n        await tx.complete;\n      }\n    }\n  }\n}\n\nexport default CacheExpiration;\n","/*\n Copyright 2016 Google Inc. All Rights Reserved.\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\n\nimport CacheExpiration from './cache-expiration';\nimport {isType, isInstance} from '../../../../lib/assert';\n\n/**\n * The `CacheExpirationPlugin` class allows you define an expiration and / or\n * limit on the responses cached.\n *\n * This class is meant to be automatically invoked as a plugin to a\n * {@link module:workbox-runtime-caching.RequestWrapper|RequestWrapper}, which\n * is used by the `workbox-sw` and `workbox-runtime-caching` modules.\n *\n * If you would like to use this functionality outside of the `RequestWrapper`\n * context, please use the [CacheExpiration]{@link\n *  module:workbox-cache-expiration.CacheExpiration} class directly.\n *\n * @example\n * const plugin = new workbox.cacheExpiration.CacheExpirationPlugin({\n *   maxEntries: 2,\n *   maxAgeSeconds: 10,\n * });\n *\n * @memberof module:workbox-cache-expiration\n */\nclass CacheExpirationPlugin extends CacheExpiration {\n  /**\n   * A \"lifecycle\" callback that will be triggered automatically by the\n   * `workbox.runtimeCaching` handlers when a `Response` is about to be returned\n   * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n   * the handler. It allows the `Response` to be inspected for freshness and\n   * prevents it from being used if the `Response`'s `Date` header value is\n   * older than the configured `maxAgeSeconds`.\n   *\n   * @private\n   * @param {Object} input\n   * @param {string} input.cacheName Name of the cache the responses belong to.\n   * @param {Response} input.cachedResponse The `Response` object that's been\n   *        read from a cache and whose freshness should be checked.\n   * @param {Number} [input.now] A timestamp. Defaults to the current time.\n   * @return {Response} Either the `cachedResponse`, if it's\n   *         fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n   */\n  cachedResponseWillBeUsed({cacheName, cachedResponse, now} = {}) {\n    if (this.isResponseFresh({cacheName, cachedResponse, now})) {\n      return cachedResponse;\n    }\n\n    return null;\n  }\n\n  /**\n   * A \"lifecycle\" callback that will be triggered automatically by the\n   * `workbox.runtimeCaching` handlers when an entry is added to a cache.\n   *\n   * @private\n   * @param {Object} input\n   * @param {string} input.cacheName Name of the cache the responses belong to.\n   * @param {Response} input.newResponse The new value in the cache.\n   * @param {string} input.url The URL for the cache entry.\n   * @param {Number} [input.now] A timestamp. Defaults to the current time.\n   */\n  async cacheDidUpdate({cacheName, newResponse, url, now} = {}) {\n    isType({cacheName}, 'string');\n    isInstance({newResponse}, Response);\n\n    if (typeof now === 'undefined') {\n      now = Date.now();\n    }\n\n    await this.updateTimestamp({cacheName, url, now});\n    await this.expireEntries({cacheName, now});\n  }\n}\n\nexport default CacheExpirationPlugin;\n"],"names":["self","registration","tmpIdbName","scope","prototype","slice","call","onsuccess","result","onerror","error","apply","then","request","forEach","Object","defineProperty","get","set","arguments","_index","_cursor","_request","_store","_tx","complete","oncomplete","onabort","_db","oldVersion","transaction","IDBIndex","IDBCursor","resolve","createIndex","index","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","replace","length","getAll","iterateCursor","push","value","continue","open","indexedDB","onupgradeneeded","delete","exports","this","isNaN","parseFloat","isFinite","toUpperCase","substring","hasOwnProperty","concat","getArgs","args","setArgs","toString","getEvalOrigin","evalOrigin","setEvalOrigin","getFunctionName","join","getFileName","getLineNumber","getColumnNumber","require$$0","parse","stacktrace","parseOpera","stack","match","parseV8OrIE","parseFFOrSafari","extractLocation","indexOf","exec","split","filter","map","pop","functionName","fileName","lineNumber","columnNumber","source","message","parseOpera9","parseOpera11","parseOpera10","shift","keys","throwError","name","Array","isArray","ErrorStackParser","constructor","_logs","_childGroups","_isFallbackMode","navigator","userAgent","parseInt","addPrimaryLog","_primaryLog","addLog","addChildGroup","print","_printLogDetails","console","groupCollapsed","_getLogContent","groupEnd","logFunc","log","colors","workbox","LOG_LEVEL","none","verbose","debug","warn","DARK_GREY","LIGHT_GREEN","LIGHT_YELLOW","LIGHT_RED","LIGHT_BLUE","_defaultLogLevel","isDevBuild","_printMessage","_shouldLogMessage","_getAllLogGroups","_getPrimaryMessageDetails","that","_getKeyValueDetails","data","LIGHT_GREY","logLevel","_errors","createError","errors","maxEntries","maxAgeSeconds","_dbs","_caches","_expirationMutex","_timestampForNextRun","getDB","cacheName","isType","idbName","has","idbVersion","keyPath","urlPropertyName","timestampPropertyName","unique","getCache","isResponseFresh","cachedResponse","now","isInstance","Response","headers","Date","getTime","expireEntries","updateTimestamp","url","location","hash","put","href","findOldEntries","findExtraEntries","deleteFromCacheAndIDB","urls","logHelper","count","isArrayOfType","cachedResponseWillBeUsed","cacheDidUpdate","newResponse"],"mappings":"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"}